{"ast":null,"code":"import { DataUtil, ElementStyleUtil, EventHandlerUtil, getUniqueIdWithPrefix, getAttributeValueByBreakpoint } from '../_utils/index';\nconst defaultFeedbackOptions = {\n  width: 100,\n  placement: 'top-center',\n  content: '',\n  type: 'popup'\n};\n\nclass FeedbackComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.shown = void 0;\n\n    this._handlers = () => {\n      this.element.addEventListener('click', e => {\n        e.preventDefault();\n\n        this._go();\n      });\n    };\n\n    this._go = () => {};\n\n    this.showPopup = () => {\n      this.element = document.createElement('DIV');\n      this.element.classList.add('feedback feedback-popup');\n      this.element.innerHTML = this.options.content || '';\n\n      if (this.options.placement === 'top-center') {\n        this.setPopupTopCenterPosition();\n      }\n\n      document.body.appendChild(this.element);\n      this.element.classList.add('feedback-shown');\n      this.shown = true;\n    };\n\n    this.setPopupTopCenterPosition = () => {\n      var _this$options$width;\n\n      const width = getAttributeValueByBreakpoint(((_this$options$width = this.options.width) === null || _this$options$width === void 0 ? void 0 : _this$options$width.toString()) || '0');\n      const height = ElementStyleUtil.get(this.element, 'height');\n      this.element.classList.add('feedback-top-center');\n      ElementStyleUtil.set(this.element, 'width', width);\n      ElementStyleUtil.set(this.element, 'left', '50%');\n      ElementStyleUtil.set(this.element, 'top', '-' + height);\n    };\n\n    this.hidePopup = () => {\n      this.element.remove();\n    };\n\n    this.show = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\n        return;\n      }\n\n      if (this.options.type === 'popup') {\n        this.showPopup();\n      }\n\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.shown');\n      return this;\n    };\n\n    this.hide = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\n        return;\n      }\n\n      if (this.options.type === 'popup') {\n        this.hidePopup();\n      }\n\n      this.shown = false;\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden');\n      return this;\n    };\n\n    this.isShown = () => {\n      return this.isShown;\n    };\n\n    this.getElement = () => {\n      return this.element;\n    };\n\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n\n    this.element = _element;\n    this.options = Object.assign(defaultFeedbackOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('feedback');\n    this.shown = false; // Event handlers\n\n    this._handlers(); // will add in the show popup\n\n\n    DataUtil.set(this.element, 'feedback', this);\n  }\n\n  // Create Instances\n  static createInstances(selector) {\n    throw new Error('not implemented');\n  } // Static methods\n\n\n  static hasInstace(element) {\n    throw new Error('not implemented');\n  }\n\n  static getInstance(element) {\n    throw new Error('not implemented');\n  }\n\n  static bootstrap(attr = '[data-Feedback]') {\n    throw new Error('not implemented');\n  }\n\n}\n\nexport { FeedbackComponent, defaultFeedbackOptions };","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/assets/ts/components/_FeedbackComponent.ts"],"names":["DataUtil","ElementStyleUtil","EventHandlerUtil","getUniqueIdWithPrefix","getAttributeValueByBreakpoint","defaultFeedbackOptions","width","placement","content","type","FeedbackComponent","constructor","_element","options","element","instanceUid","shown","_handlers","addEventListener","e","preventDefault","_go","showPopup","document","createElement","classList","add","innerHTML","setPopupTopCenterPosition","body","appendChild","toString","height","get","set","hidePopup","remove","show","trigger","hide","isShown","getElement","on","name","handler","one","off","event","Object","assign","createInstances","selector","Error","hasInstace","getInstance","bootstrap","attr"],"mappings":"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","sourcesContent":["import {\r\n  DataUtil,\r\n  ElementStyleUtil,\r\n  EventHandlerUtil,\r\n  getUniqueIdWithPrefix,\r\n  getAttributeValueByBreakpoint,\r\n} from '../_utils/index'\r\n\r\nexport interface FeedbackOptions {\r\n  width?: number\r\n  placement?: string\r\n  content?: string\r\n  type?: string\r\n}\r\n\r\nconst defaultFeedbackOptions: FeedbackOptions = {\r\n  width: 100,\r\n  placement: 'top-center',\r\n  content: '',\r\n  type: 'popup',\r\n}\r\n\r\nclass FeedbackComponent {\r\n  element: HTMLElement\r\n  options: FeedbackOptions\r\n  instanceUid: string\r\n  shown: boolean\r\n\r\n  constructor(_element: HTMLElement, options: FeedbackOptions) {\r\n    this.element = _element\r\n    this.options = Object.assign(defaultFeedbackOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('feedback')\r\n    this.shown = false\r\n\r\n    // Event handlers\r\n    this._handlers() // will add in the show popup\r\n    DataUtil.set(this.element, 'feedback', this)\r\n  }\r\n\r\n  private _handlers = () => {\r\n    this.element.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n      this._go()\r\n    })\r\n  }\r\n\r\n  private _go = () => {}\r\n\r\n  private showPopup = () => {\r\n    this.element = document.createElement('DIV')\r\n\r\n    this.element.classList.add('feedback feedback-popup')\r\n    this.element.innerHTML = this.options.content || ''\r\n\r\n    if (this.options.placement === 'top-center') {\r\n      this.setPopupTopCenterPosition()\r\n    }\r\n\r\n    document.body.appendChild(this.element)\r\n    this.element.classList.add('feedback-shown')\r\n    this.shown = true\r\n  }\r\n\r\n  private setPopupTopCenterPosition = () => {\r\n    const width = getAttributeValueByBreakpoint(this.options.width?.toString() || '0')\r\n    const height = ElementStyleUtil.get(this.element, 'height')\r\n    this.element.classList.add('feedback-top-center')\r\n    ElementStyleUtil.set(this.element, 'width', width)\r\n    ElementStyleUtil.set(this.element, 'left', '50%')\r\n    ElementStyleUtil.set(this.element, 'top', '-' + height)\r\n  }\r\n\r\n  private hidePopup = () => {\r\n    this.element.remove()\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n  public show = () => {\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\r\n      return\r\n    }\r\n\r\n    if (this.options.type === 'popup') {\r\n      this.showPopup()\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.shown')\r\n\r\n    return this\r\n  }\r\n\r\n  public hide = () => {\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\r\n      return\r\n    }\r\n\r\n    if (this.options.type === 'popup') {\r\n      this.hidePopup()\r\n    }\r\n\r\n    this.shown = false\r\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden')\r\n    return this\r\n  }\r\n\r\n  public isShown = () => {\r\n    return this.isShown\r\n  }\r\n\r\n  public getElement = () => {\r\n    return this.element\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler)\r\n  }\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler)\r\n  }\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name)\r\n  }\r\n\r\n  public trigger = (name: string, event: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event)\r\n  }\r\n\r\n  // Create Instances\r\n  public static createInstances(selector: string) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  // Static methods\r\n  public static hasInstace(element: HTMLElement) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  public static getInstance(element: HTMLElement) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  public static bootstrap(attr: string = '[data-Feedback]') {\r\n    throw new Error('not implemented')\r\n  }\r\n}\r\n\r\nexport {FeedbackComponent, defaultFeedbackOptions}\r\n"]},"metadata":{},"sourceType":"module"}