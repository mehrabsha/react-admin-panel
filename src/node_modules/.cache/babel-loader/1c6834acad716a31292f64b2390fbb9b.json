{"ast":null,"code":"export class DataUtil {\n  static set(instance, key, data) {\n    if (!instance) {\n      return;\n    }\n\n    const instanceData = DataUtil.store.get(instance);\n\n    if (!instanceData) {\n      const newMap = new Map().set(key, data);\n      DataUtil.store.set(instance, newMap);\n      return;\n    }\n\n    instanceData.set(key, data);\n  }\n\n  static get(instance, key) {\n    const instanceData = DataUtil.store.get(instance);\n\n    if (!instanceData) {\n      return;\n    }\n\n    return instanceData.get(key);\n  }\n\n  static remove(instance, key) {\n    const instanceData = DataUtil.store.get(instance);\n\n    if (!instanceData) {\n      return;\n    }\n\n    instanceData.delete(key);\n  }\n\n  static has(instance, key) {\n    const instanceData = DataUtil.store.get(instance);\n\n    if (instanceData) {\n      return instanceData.has(key);\n    }\n\n    return false;\n  }\n\n  static getAllInstancesByKey(key) {\n    const result = [];\n    DataUtil.store.forEach(val => {\n      val.forEach((v, k) => {\n        if (k === key) {\n          result.push(v);\n        }\n      });\n    });\n    return result;\n  }\n\n}\nDataUtil.store = new Map();","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/assets/ts/_utils/_DataUtil.ts"],"names":["DataUtil","set","instance","key","data","instanceData","store","get","newMap","Map","remove","delete","has","getAllInstancesByKey","result","forEach","val","v","k","push"],"mappings":"AAAA,OAAO,MAAMA,QAAN,CAAe;AAGH,SAAHC,GAAG,CAACC,QAAD,EAAoCC,GAApC,EAAiDC,IAAjD,EAAkE;AACjF,QAAI,CAACF,QAAL,EAAe;AACb;AACD;;AAED,UAAMG,YAAY,GAAGL,QAAQ,CAACM,KAAT,CAAeC,GAAf,CAAmBL,QAAnB,CAArB;;AACA,QAAI,CAACG,YAAL,EAAmB;AACjB,YAAMG,MAAM,GAAG,IAAIC,GAAJ,GAAUR,GAAV,CAAcE,GAAd,EAAmBC,IAAnB,CAAf;AACAJ,MAAAA,QAAQ,CAACM,KAAT,CAAeL,GAAf,CAAmBC,QAAnB,EAA6BM,MAA7B;AACA;AACD;;AAEDH,IAAAA,YAAY,CAACJ,GAAb,CAAiBE,GAAjB,EAAsBC,IAAtB;AACD;;AAEgB,SAAHG,GAAG,CAACL,QAAD,EAAwBC,GAAxB,EAAsD;AACrE,UAAME,YAAY,GAAGL,QAAQ,CAACM,KAAT,CAAeC,GAAf,CAAmBL,QAAnB,CAArB;;AACA,QAAI,CAACG,YAAL,EAAmB;AACjB;AACD;;AAED,WAAOA,YAAY,CAACE,GAAb,CAAiBJ,GAAjB,CAAP;AACD;;AAEmB,SAANO,MAAM,CAACR,QAAD,EAAwBC,GAAxB,EAA2C;AAC7D,UAAME,YAAY,GAAGL,QAAQ,CAACM,KAAT,CAAeC,GAAf,CAAmBL,QAAnB,CAArB;;AACA,QAAI,CAACG,YAAL,EAAmB;AACjB;AACD;;AAEDA,IAAAA,YAAY,CAACM,MAAb,CAAoBR,GAApB;AACD;;AAEgB,SAAHS,GAAG,CAACV,QAAD,EAAwBC,GAAxB,EAA8C;AAC7D,UAAME,YAAY,GAAGL,QAAQ,CAACM,KAAT,CAAeC,GAAf,CAAmBL,QAAnB,CAArB;;AACA,QAAIG,YAAJ,EAAkB;AAChB,aAAOA,YAAY,CAACO,GAAb,CAAiBT,GAAjB,CAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAEiC,SAApBU,oBAAoB,CAACV,GAAD,EAAc;AAC9C,UAAMW,MAAa,GAAG,EAAtB;AACAd,IAAAA,QAAQ,CAACM,KAAT,CAAeS,OAAf,CAAwBC,GAAD,IAAS;AAC9BA,MAAAA,GAAG,CAACD,OAAJ,CAAY,CAACE,CAAD,EAAIC,CAAJ,KAAU;AACpB,YAAIA,CAAC,KAAKf,GAAV,EAAe;AACbW,UAAAA,MAAM,CAACK,IAAP,CAAYF,CAAZ;AACD;AACF,OAJD;AAKD,KAND;AAOA,WAAOH,MAAP;AACD;;AAvDmB;AAATd,Q,CACJM,K,GAA4C,IAAIG,GAAJ,E","sourcesContent":["export class DataUtil {\r\n  static store: Map<HTMLElement, Map<string, any>> = new Map()\r\n\r\n  public static set(instance: HTMLElement | undefined, key: string, data: any): void {\r\n    if (!instance) {\r\n      return\r\n    }\r\n\r\n    const instanceData = DataUtil.store.get(instance)\r\n    if (!instanceData) {\r\n      const newMap = new Map().set(key, data)\r\n      DataUtil.store.set(instance, newMap)\r\n      return\r\n    }\r\n\r\n    instanceData.set(key, data)\r\n  }\r\n\r\n  public static get(instance: HTMLElement, key: string): any | undefined {\r\n    const instanceData = DataUtil.store.get(instance)\r\n    if (!instanceData) {\r\n      return\r\n    }\r\n\r\n    return instanceData.get(key)\r\n  }\r\n\r\n  public static remove(instance: HTMLElement, key: string): void {\r\n    const instanceData = DataUtil.store.get(instance)\r\n    if (!instanceData) {\r\n      return\r\n    }\r\n\r\n    instanceData.delete(key)\r\n  }\r\n\r\n  public static has(instance: HTMLElement, key: string): boolean {\r\n    const instanceData = DataUtil.store.get(instance)\r\n    if (instanceData) {\r\n      return instanceData.has(key)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  public static getAllInstancesByKey(key: string) {\r\n    const result: any[] = []\r\n    DataUtil.store.forEach((val) => {\r\n      val.forEach((v, k) => {\r\n        if (k === key) {\r\n          result.push(v)\r\n        }\r\n      })\r\n    })\r\n    return result\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}