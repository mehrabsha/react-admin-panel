{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\n\nvar FormattedDateTimeRange = function (props) {\n  var intl = useIntl();\n\n  var from = props.from,\n      to = props.to,\n      children = props.children,\n      formatProps = __rest(props, [\"from\", \"to\", \"children\"]);\n\n  var formattedValue = intl.formatDateTimeRange(from, to, formatProps);\n\n  if (typeof children === 'function') {\n    return children(formattedValue);\n  }\n\n  var Text = intl.textComponent || React.Fragment;\n  return React.createElement(Text, null, formattedValue);\n};\n\nFormattedDateTimeRange.displayName = 'FormattedDateTimeRange';\nexport default FormattedDateTimeRange;","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/react-intl/lib/src/components/dateTimeRange.js"],"names":["__rest","React","useIntl","FormattedDateTimeRange","props","intl","from","to","children","formatProps","formattedValue","formatDateTimeRange","Text","textComponent","Fragment","createElement","displayName"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,IAAIC,sBAAsB,GAAG,UAAUC,KAAV,EAAiB;AAC1C,MAAIC,IAAI,GAAGH,OAAO,EAAlB;;AACA,MAAII,IAAI,GAAGF,KAAK,CAACE,IAAjB;AAAA,MAAuBC,EAAE,GAAGH,KAAK,CAACG,EAAlC;AAAA,MAAsCC,QAAQ,GAAGJ,KAAK,CAACI,QAAvD;AAAA,MAAiEC,WAAW,GAAGT,MAAM,CAACI,KAAD,EAAQ,CAAC,MAAD,EAAS,IAAT,EAAe,UAAf,CAAR,CAArF;;AACA,MAAIM,cAAc,GAAGL,IAAI,CAACM,mBAAL,CAAyBL,IAAzB,EAA+BC,EAA/B,EAAmCE,WAAnC,CAArB;;AACA,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,WAAOA,QAAQ,CAACE,cAAD,CAAf;AACH;;AACD,MAAIE,IAAI,GAAGP,IAAI,CAACQ,aAAL,IAAsBZ,KAAK,CAACa,QAAvC;AACA,SAAOb,KAAK,CAACc,aAAN,CAAoBH,IAApB,EAA0B,IAA1B,EAAgCF,cAAhC,CAAP;AACH,CATD;;AAUAP,sBAAsB,CAACa,WAAvB,GAAqC,wBAArC;AACA,eAAeb,sBAAf","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedDateTimeRange = function (props) {\n    var intl = useIntl();\n    var from = props.from, to = props.to, children = props.children, formatProps = __rest(props, [\"from\", \"to\", \"children\"]);\n    var formattedValue = intl.formatDateTimeRange(from, to, formatProps);\n    if (typeof children === 'function') {\n        return children(formattedValue);\n    }\n    var Text = intl.textComponent || React.Fragment;\n    return React.createElement(Text, null, formattedValue);\n};\nFormattedDateTimeRange.displayName = 'FormattedDateTimeRange';\nexport default FormattedDateTimeRange;\n"]},"metadata":{},"sourceType":"module"}