{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reduxBatch = reduxBatch;\n\nfunction reduxBatch(next) {\n  var nextListeners = [];\n  var currentListeners = undefined;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = nextListeners.slice();\n    }\n  }\n\n  function subscribe(listener) {\n    if (typeof listener !== \"function\") throw new Error(\"Invalid listener, expected a function\");\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) return;\n      ensureCanMutateNextListeners();\n      nextListeners.splice(nextListeners.indexOf(listener), 1);\n      isSubscribed = false;\n    };\n  }\n\n  function notifyListeners() {\n    var listeners = nextListeners;\n\n    for (var t = 0; t < listeners.length; ++t) {\n      currentListeners = listeners;\n      listeners[t]();\n    }\n  }\n\n  return function () {\n    var store = next.apply(undefined, arguments);\n    var receivedNotification = false;\n    var inDispatch = false;\n\n    function dispatchRecurse(action) {\n      return Array.isArray(action) ? action.map(function (subAction) {\n        return dispatchRecurse(subAction);\n      }) : store.dispatch(action);\n    }\n\n    function dispatch(action) {\n      var reentrant = inDispatch;\n\n      if (!reentrant) {\n        receivedNotification = false;\n        inDispatch = true;\n      }\n\n      var result = dispatchRecurse(action);\n      var requiresNotification = receivedNotification && !reentrant;\n\n      if (!reentrant) {\n        receivedNotification = false;\n        inDispatch = false;\n      }\n\n      if (requiresNotification) notifyListeners();\n      return result;\n    }\n\n    store.subscribe(function () {\n      if (inDispatch) {\n        receivedNotification = true;\n      } else {\n        notifyListeners();\n      }\n    });\n    return Object.assign({}, store, {\n      dispatch: dispatch,\n      subscribe: subscribe\n    });\n  };\n}","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/@manaflair/redux-batch/build/core/reduxBatch.js"],"names":["Object","defineProperty","exports","value","reduxBatch","next","nextListeners","currentListeners","undefined","ensureCanMutateNextListeners","slice","subscribe","listener","Error","isSubscribed","push","unsubscribe","splice","indexOf","notifyListeners","listeners","t","length","store","apply","arguments","receivedNotification","inDispatch","dispatchRecurse","action","Array","isArray","map","subAction","dispatch","reentrant","result","requiresNotification","assign"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AACA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AAEtB,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,gBAAgB,GAAGC,SAAvB;;AAEA,WAASC,4BAAT,GAAwC;AAEpC,QAAIH,aAAa,KAAKC,gBAAtB,EAAwC;AACpCD,MAAAA,aAAa,GAAGA,aAAa,CAACI,KAAd,EAAhB;AACH;AACJ;;AAED,WAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAEzB,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC,MAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AAEpC,QAAIC,YAAY,GAAG,IAAnB;AAEAL,IAAAA,4BAA4B;AAC5BH,IAAAA,aAAa,CAACS,IAAd,CAAmBH,QAAnB;AAEA,WAAO,SAASI,WAAT,GAAuB;AAE1B,UAAI,CAACF,YAAL,EAAmB;AAEnBL,MAAAA,4BAA4B;AAC5BH,MAAAA,aAAa,CAACW,MAAd,CAAqBX,aAAa,CAACY,OAAd,CAAsBN,QAAtB,CAArB,EAAsD,CAAtD;AAEAE,MAAAA,YAAY,GAAG,KAAf;AACH,KARD;AASH;;AAED,WAASK,eAAT,GAA2B;AAEvB,QAAIC,SAAS,GAAGd,aAAhB;;AAEA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsC,EAAED,CAAxC,EAA2C;AACvCd,MAAAA,gBAAgB,GAAGa,SAAnB;AACAA,MAAAA,SAAS,CAACC,CAAD,CAAT;AACH;AACJ;;AAED,SAAO,YAAY;AAEf,QAAIE,KAAK,GAAGlB,IAAI,CAACmB,KAAL,CAAWhB,SAAX,EAAsBiB,SAAtB,CAAZ;AAEA,QAAIC,oBAAoB,GAAG,KAA3B;AACA,QAAIC,UAAU,GAAG,KAAjB;;AAEA,aAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAE7B,aAAOC,KAAK,CAACC,OAAN,CAAcF,MAAd,IAAwBA,MAAM,CAACG,GAAP,CAAW,UAAUC,SAAV,EAAqB;AAC3D,eAAOL,eAAe,CAACK,SAAD,CAAtB;AACH,OAF8B,CAAxB,GAEFV,KAAK,CAACW,QAAN,CAAeL,MAAf,CAFL;AAGH;;AAED,aAASK,QAAT,CAAkBL,MAAlB,EAA0B;AAEtB,UAAIM,SAAS,GAAGR,UAAhB;;AAEA,UAAI,CAACQ,SAAL,EAAgB;AACZT,QAAAA,oBAAoB,GAAG,KAAvB;AACAC,QAAAA,UAAU,GAAG,IAAb;AACH;;AAED,UAAIS,MAAM,GAAGR,eAAe,CAACC,MAAD,CAA5B;AACA,UAAIQ,oBAAoB,GAAGX,oBAAoB,IAAI,CAACS,SAApD;;AAEA,UAAI,CAACA,SAAL,EAAgB;AACZT,QAAAA,oBAAoB,GAAG,KAAvB;AACAC,QAAAA,UAAU,GAAG,KAAb;AACH;;AAED,UAAIU,oBAAJ,EAA0BlB,eAAe;AAEzC,aAAOiB,MAAP;AACH;;AAEDb,IAAAA,KAAK,CAACZ,SAAN,CAAgB,YAAY;AAExB,UAAIgB,UAAJ,EAAgB;AACZD,QAAAA,oBAAoB,GAAG,IAAvB;AACH,OAFD,MAEO;AACHP,QAAAA,eAAe;AAClB;AACJ,KAPD;AASA,WAAOnB,MAAM,CAACsC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AAC5BW,MAAAA,QAAQ,EAAEA,QADkB;AACRvB,MAAAA,SAAS,EAAEA;AADH,KAAzB,CAAP;AAGH,GAhDD;AAiDH","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.reduxBatch = reduxBatch;\nfunction reduxBatch(next) {\n\n    var nextListeners = [];\n    var currentListeners = undefined;\n\n    function ensureCanMutateNextListeners() {\n\n        if (nextListeners === currentListeners) {\n            nextListeners = nextListeners.slice();\n        }\n    }\n\n    function subscribe(listener) {\n\n        if (typeof listener !== \"function\") throw new Error(\"Invalid listener, expected a function\");\n\n        var isSubscribed = true;\n\n        ensureCanMutateNextListeners();\n        nextListeners.push(listener);\n\n        return function unsubscribe() {\n\n            if (!isSubscribed) return;\n\n            ensureCanMutateNextListeners();\n            nextListeners.splice(nextListeners.indexOf(listener), 1);\n\n            isSubscribed = false;\n        };\n    }\n\n    function notifyListeners() {\n\n        var listeners = nextListeners;\n\n        for (var t = 0; t < listeners.length; ++t) {\n            currentListeners = listeners;\n            listeners[t]();\n        }\n    }\n\n    return function () {\n\n        var store = next.apply(undefined, arguments);\n\n        var receivedNotification = false;\n        var inDispatch = false;\n\n        function dispatchRecurse(action) {\n\n            return Array.isArray(action) ? action.map(function (subAction) {\n                return dispatchRecurse(subAction);\n            }) : store.dispatch(action);\n        }\n\n        function dispatch(action) {\n\n            var reentrant = inDispatch;\n\n            if (!reentrant) {\n                receivedNotification = false;\n                inDispatch = true;\n            }\n\n            var result = dispatchRecurse(action);\n            var requiresNotification = receivedNotification && !reentrant;\n\n            if (!reentrant) {\n                receivedNotification = false;\n                inDispatch = false;\n            }\n\n            if (requiresNotification) notifyListeners();\n\n            return result;\n        }\n\n        store.subscribe(function () {\n\n            if (inDispatch) {\n                receivedNotification = true;\n            } else {\n                notifyListeners();\n            }\n        });\n\n        return Object.assign({}, store, {\n            dispatch: dispatch, subscribe: subscribe\n        });\n    };\n}"]},"metadata":{},"sourceType":"script"}