{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\n\nfunction areEqual(prevProps, nextProps) {\n  var values = prevProps.values,\n      otherProps = __rest(prevProps, [\"values\"]);\n\n  var nextValues = nextProps.values,\n      nextOtherProps = __rest(nextProps, [\"values\"]);\n\n  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);\n}\n\nfunction FormattedMessage(props) {\n  var intl = useIntl();\n  var formatMessage = intl.formatMessage,\n      _a = intl.textComponent,\n      Text = _a === void 0 ? React.Fragment : _a;\n  var id = props.id,\n      description = props.description,\n      defaultMessage = props.defaultMessage,\n      values = props.values,\n      children = props.children,\n      _b = props.tagName,\n      Component = _b === void 0 ? Text : _b,\n      ignoreTag = props.ignoreTag;\n  var descriptor = {\n    id: id,\n    description: description,\n    defaultMessage: defaultMessage\n  };\n  var nodes = formatMessage(descriptor, values, {\n    ignoreTag: ignoreTag\n  });\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  if (typeof children === 'function') {\n    return children(nodes);\n  }\n\n  if (Component) {\n    return React.createElement(Component, null, React.Children.toArray(nodes));\n  }\n\n  return React.createElement(React.Fragment, null, nodes);\n}\n\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/react-intl/lib/src/components/message.js"],"names":["__rest","React","useIntl","shallowEqual","areEqual","prevProps","nextProps","values","otherProps","nextValues","nextOtherProps","FormattedMessage","props","intl","formatMessage","_a","textComponent","Text","Fragment","id","description","defaultMessage","children","_b","tagName","Component","ignoreTag","descriptor","nodes","Array","isArray","createElement","Children","toArray","displayName","MemoizedFormattedMessage","memo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,UAA7B;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,SAA7B,EAAwC;AACpC,MAAIC,MAAM,GAAGF,SAAS,CAACE,MAAvB;AAAA,MAA+BC,UAAU,GAAGR,MAAM,CAACK,SAAD,EAAY,CAAC,QAAD,CAAZ,CAAlD;;AACA,MAAII,UAAU,GAAGH,SAAS,CAACC,MAA3B;AAAA,MAAmCG,cAAc,GAAGV,MAAM,CAACM,SAAD,EAAY,CAAC,QAAD,CAAZ,CAA1D;;AACA,SAAQH,YAAY,CAACM,UAAD,EAAaF,MAAb,CAAZ,IACJJ,YAAY,CAACK,UAAD,EAAaE,cAAb,CADhB;AAEH;;AACD,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,MAAIC,IAAI,GAAGX,OAAO,EAAlB;AACA,MAAIY,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MAAwCC,EAAE,GAAGF,IAAI,CAACG,aAAlD;AAAA,MAAiEC,IAAI,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBd,KAAK,CAACiB,QAAtB,GAAiCH,EAAzG;AACA,MAAII,EAAE,GAAGP,KAAK,CAACO,EAAf;AAAA,MAAmBC,WAAW,GAAGR,KAAK,CAACQ,WAAvC;AAAA,MAAoDC,cAAc,GAAGT,KAAK,CAACS,cAA3E;AAAA,MAA2Fd,MAAM,GAAGK,KAAK,CAACL,MAA1G;AAAA,MAAkHe,QAAQ,GAAGV,KAAK,CAACU,QAAnI;AAAA,MAA6IC,EAAE,GAAGX,KAAK,CAACY,OAAxJ;AAAA,MAAiKC,SAAS,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBN,IAAhB,GAAuBM,EAApM;AAAA,MAAwMG,SAAS,GAAGd,KAAK,CAACc,SAA1N;AACA,MAAIC,UAAU,GAAG;AAAER,IAAAA,EAAE,EAAEA,EAAN;AAAUC,IAAAA,WAAW,EAAEA,WAAvB;AAAoCC,IAAAA,cAAc,EAAEA;AAApD,GAAjB;AACA,MAAIO,KAAK,GAAGd,aAAa,CAACa,UAAD,EAAapB,MAAb,EAAqB;AAC1CmB,IAAAA,SAAS,EAAEA;AAD+B,GAArB,CAAzB;;AAGA,MAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvBA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACH;;AACD,MAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;AAChC,WAAOA,QAAQ,CAACM,KAAD,CAAf;AACH;;AACD,MAAIH,SAAJ,EAAe;AACX,WAAOxB,KAAK,CAAC8B,aAAN,CAAoBN,SAApB,EAA+B,IAA/B,EAAqCxB,KAAK,CAAC+B,QAAN,CAAeC,OAAf,CAAuBL,KAAvB,CAArC,CAAP;AACH;;AACD,SAAO3B,KAAK,CAAC8B,aAAN,CAAoB9B,KAAK,CAACiB,QAA1B,EAAoC,IAApC,EAA0CU,KAA1C,CAAP;AACH;;AACDjB,gBAAgB,CAACuB,WAAjB,GAA+B,kBAA/B;AACA,IAAIC,wBAAwB,GAAGlC,KAAK,CAACmC,IAAN,CAAWzB,gBAAX,EAA6BP,QAA7B,CAA/B;AACA+B,wBAAwB,CAACD,WAAzB,GAAuC,0BAAvC;AACA,eAAeC,wBAAf","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (!Array.isArray(nodes)) {\n        nodes = [nodes];\n    }\n    if (typeof children === 'function') {\n        return children(nodes);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"]},"metadata":{},"sourceType":"module"}