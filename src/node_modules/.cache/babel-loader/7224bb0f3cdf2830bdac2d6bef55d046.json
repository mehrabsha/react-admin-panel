{"ast":null,"code":"/*!\n * Chart.js v3.4.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][meta.index];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n\n      if (value === 0) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    const actualBase = baseValue || 0;\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && _getParentNode(container));\n  }\n\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom') {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.4.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n\n    return new DomPlatform();\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    const me = this;\n\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      me.attached = true;\n      me.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      me.attached = false;\n\n      _remove('resize', listener);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      setMax(max + 1);\n\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    const items = [min];\n    let i, ilen, curr;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n    return items;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","log10","J","_factorize","K","finiteOrDefault","L","callback","M","_addGrace","N","toDegrees","O","_measureText","Q","_int16Range","R","_alignPixel","S","clipArea","U","renderText","V","unclipArea","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.4.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}