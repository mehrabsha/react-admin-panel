{"ast":null,"code":"import { EventHandlerUtil, DataUtil, getUniqueIdWithPrefix, getCSS } from '../_utils/index';\nconst defaultImageInputOptions = {};\nconst defaultImageInputQueires = {\n  componentName: 'image-input',\n  instanseQuery: '[data-kt-image-input]',\n  inputQuery: 'input[type=\"file\"]',\n  wrapperQuery: '.image-input-wrapper',\n  cancelQuery: '[data-kt-image-input-action=\"cancel\"]',\n  removeQuery: '[data-kt-image-input-action=\"remove\"]',\n  hiddenQuery: 'input[type=\"hidden\"]'\n};\n\nclass ImageInputComponent {\n  constructor(_element, _options, _queries) {\n    this.element = void 0;\n    this.inputElement = void 0;\n    this.wrapperElement = void 0;\n    this.cancelElement = void 0;\n    this.removeElement = void 0;\n    this.hiddenElement = void 0;\n    this.src = '';\n    this.options = void 0;\n    this.queries = void 0;\n    this.uid = void 0;\n    this.value = '';\n\n    this._change = e => {\n      e.preventDefault();\n\n      if (this.inputElement !== null && this.inputElement.files && this.inputElement.files[0]) {\n        // Fire change event\n        if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.change', e) === false) {\n          return;\n        }\n\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          if (this.wrapperElement && e.target) {\n            this.wrapperElement.style.setProperty('background-image', `url('${e.target.result}')`);\n          }\n        };\n\n        reader.readAsDataURL(this.inputElement.files[0]);\n        this.element.classList.add('image-input-changed');\n        this.element.classList.remove('image-input-empty'); // Fire removed event\n\n        EventHandlerUtil.trigger(this.element, 'kt.imageinput.changed', e);\n      }\n    };\n\n    this._cancel = e => {\n      e.preventDefault(); // Fire cancel event\n\n      if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.cancel', e) === false) {\n        return;\n      }\n\n      this.element.classList.remove('image-input-changed');\n      this.element.classList.remove('image-input-empty');\n      this.element.style.setProperty('background-image', this.src);\n\n      if (this.inputElement) {\n        this.inputElement.value = '';\n      }\n\n      if (this.hiddenElement !== null) {\n        this.hiddenElement.value = '0';\n      } // Fire canceled event\n\n\n      EventHandlerUtil.trigger(this.element, 'kt.imageinput.canceled', e);\n    };\n\n    this._remove = e => {\n      e.preventDefault(); // Fire remove event\n\n      if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.remove', e) === false) {\n        return;\n      }\n\n      this.element.classList.remove('image-input-changed');\n      this.element.classList.add('image-input-empty');\n\n      if (this.wrapperElement) {\n        this.wrapperElement.style.setProperty('background-image', 'none');\n      }\n\n      if (this.inputElement) {\n        this.inputElement.value = '';\n      }\n\n      if (this.hiddenElement !== null) {\n        this.hiddenElement.value = '1';\n      } // Fire removed event\n\n\n      EventHandlerUtil.trigger(this.element, 'kt.imageinput.removed', e);\n    };\n\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n\n    // Variables\n    this.options = Object.assign(defaultImageInputOptions, _options);\n    this.queries = _queries;\n    this.uid = getUniqueIdWithPrefix(this.queries.componentName); // Elements\n\n    this.element = _element;\n    this.inputElement = this.element.querySelector(this.queries.inputQuery);\n    this.wrapperElement = this.element.querySelector(this.queries.wrapperQuery);\n    this.cancelElement = this.element.querySelector(this.queries.cancelQuery);\n    this.removeElement = this.element.querySelector(this.queries.removeQuery);\n    this.hiddenElement = this.element.querySelector(this.queries.hiddenQuery);\n\n    if (this.wrapperElement) {\n      this.src = getCSS(this.wrapperElement, 'backgroundImage');\n    } // Event Handlers\n\n\n    this.handlers();\n    DataUtil.set(this.element, this.queries.componentName, this);\n  }\n\n  handlers() {\n    this.element.addEventListener('change', this._change);\n\n    if (this.cancelElement) {\n      this.cancelElement.addEventListener('click', this._cancel);\n    }\n\n    if (this.removeElement) {\n      this.removeElement.addEventListener('click', this._cancel);\n    }\n  } // Event Handlers\n\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  getInputElement() {\n    return this.inputElement;\n  }\n\n  getElement() {\n    return this.element;\n  } // Event API\n\n\n}\n\nImageInputComponent.getInstance = (el, componentName = defaultImageInputQueires.componentName) => {\n  const ImageInput = DataUtil.get(el, componentName);\n\n  if (ImageInput) {\n    return ImageInput;\n  }\n\n  return null;\n};\n\nImageInputComponent.createInstances = (selector = defaultImageInputQueires.instanseQuery, options = defaultImageInputOptions, queries = defaultImageInputQueires) => {\n  const elements = document.body.querySelectorAll(selector);\n  elements.forEach(el => {\n    const item = el;\n    let ImageInput = ImageInputComponent.getInstance(item);\n\n    if (!ImageInput) {\n      ImageInput = new ImageInputComponent(item, options, queries);\n    }\n  });\n};\n\nImageInputComponent.createInsance = (selector = defaultImageInputQueires.instanseQuery, options = defaultImageInputOptions, queries = defaultImageInputQueires) => {\n  const element = document.body.querySelector(selector);\n\n  if (!element) {\n    return;\n  }\n\n  const item = element;\n  let ImageInput = ImageInputComponent.getInstance(item);\n\n  if (!ImageInput) {\n    ImageInput = new ImageInputComponent(item, options, queries);\n  }\n\n  return ImageInput;\n};\n\nImageInputComponent.bootstrap = (selector = defaultImageInputQueires.instanseQuery) => {\n  ImageInputComponent.createInstances(selector);\n};\n\nImageInputComponent.reinitialization = (selector = defaultImageInputQueires.instanseQuery) => {\n  ImageInputComponent.createInstances(selector);\n};\n\nexport { ImageInputComponent, defaultImageInputOptions, defaultImageInputQueires };","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/assets/ts/components/_ImageInputComponent.ts"],"names":["EventHandlerUtil","DataUtil","getUniqueIdWithPrefix","getCSS","defaultImageInputOptions","defaultImageInputQueires","componentName","instanseQuery","inputQuery","wrapperQuery","cancelQuery","removeQuery","hiddenQuery","ImageInputComponent","constructor","_element","_options","_queries","element","inputElement","wrapperElement","cancelElement","removeElement","hiddenElement","src","options","queries","uid","value","_change","e","preventDefault","files","trigger","reader","FileReader","onload","target","style","setProperty","result","readAsDataURL","classList","add","remove","_cancel","_remove","on","name","handler","one","off","event","Object","assign","querySelector","handlers","set","addEventListener","getInputElement","getElement","getInstance","el","ImageInput","get","createInstances","selector","elements","document","body","querySelectorAll","forEach","item","createInsance","bootstrap","reinitialization"],"mappings":"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","sourcesContent":["import {EventHandlerUtil, DataUtil, getUniqueIdWithPrefix, getCSS} from '../_utils/index'\r\n\r\nexport interface IImageInputOptions {}\r\n\r\nexport interface IImageInputQueries {\r\n  componentName: string\r\n  instanseQuery: string\r\n  inputQuery: string\r\n  wrapperQuery: string\r\n  cancelQuery: string\r\n  removeQuery: string\r\n  hiddenQuery: string\r\n}\r\n\r\nconst defaultImageInputOptions = {}\r\n\r\nconst defaultImageInputQueires: IImageInputQueries = {\r\n  componentName: 'image-input',\r\n  instanseQuery: '[data-kt-image-input]',\r\n  inputQuery: 'input[type=\"file\"]',\r\n  wrapperQuery: '.image-input-wrapper',\r\n  cancelQuery: '[data-kt-image-input-action=\"cancel\"]',\r\n  removeQuery: '[data-kt-image-input-action=\"remove\"]',\r\n  hiddenQuery: 'input[type=\"hidden\"]',\r\n}\r\n\r\nclass ImageInputComponent {\r\n  element: HTMLElement\r\n  inputElement: HTMLInputElement | null\r\n  wrapperElement: HTMLElement | null\r\n  cancelElement: HTMLElement | null\r\n  removeElement: HTMLElement | null\r\n  hiddenElement: HTMLInputElement | null\r\n  src: string = ''\r\n  options: IImageInputOptions\r\n  queries: IImageInputQueries\r\n  uid: string\r\n  value: string = ''\r\n\r\n  constructor(_element: HTMLElement, _options: IImageInputOptions, _queries: IImageInputQueries) {\r\n    // Variables\r\n    this.options = Object.assign(defaultImageInputOptions, _options)\r\n    this.queries = _queries\r\n    this.uid = getUniqueIdWithPrefix(this.queries.componentName)\r\n\r\n    // Elements\r\n    this.element = _element\r\n    this.inputElement = this.element.querySelector(this.queries.inputQuery)\r\n    this.wrapperElement = this.element.querySelector(this.queries.wrapperQuery)\r\n    this.cancelElement = this.element.querySelector(this.queries.cancelQuery)\r\n    this.removeElement = this.element.querySelector(this.queries.removeQuery)\r\n    this.hiddenElement = this.element.querySelector(this.queries.hiddenQuery)\r\n    if (this.wrapperElement) {\r\n      this.src = getCSS(this.wrapperElement, 'backgroundImage')\r\n    }\r\n\r\n    // Event Handlers\r\n    this.handlers()\r\n\r\n    DataUtil.set(this.element, this.queries.componentName, this)\r\n  }\r\n\r\n  private handlers(): void {\r\n    this.element.addEventListener('change', this._change)\r\n    if (this.cancelElement) {\r\n      this.cancelElement.addEventListener('click', this._cancel)\r\n    }\r\n\r\n    if (this.removeElement) {\r\n      this.removeElement.addEventListener('click', this._cancel)\r\n    }\r\n  }\r\n\r\n  // Event Handlers\r\n  private _change = (e: Event) => {\r\n    e.preventDefault()\r\n\r\n    if (this.inputElement !== null && this.inputElement.files && this.inputElement.files[0]) {\r\n      // Fire change event\r\n      if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.change', e) === false) {\r\n        return\r\n      }\r\n\r\n      const reader = new FileReader()\r\n\r\n      reader.onload = (e: ProgressEvent<FileReader>) => {\r\n        if (this.wrapperElement && e.target) {\r\n          this.wrapperElement.style.setProperty('background-image', `url('${e.target.result}')`)\r\n        }\r\n      }\r\n\r\n      reader.readAsDataURL(this.inputElement.files[0])\r\n      this.element.classList.add('image-input-changed')\r\n      this.element.classList.remove('image-input-empty')\r\n\r\n      // Fire removed event\r\n      EventHandlerUtil.trigger(this.element, 'kt.imageinput.changed', e)\r\n    }\r\n  }\r\n\r\n  private _cancel = (e: Event) => {\r\n    e.preventDefault()\r\n\r\n    // Fire cancel event\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.cancel', e) === false) {\r\n      return\r\n    }\r\n\r\n    this.element.classList.remove('image-input-changed')\r\n    this.element.classList.remove('image-input-empty')\r\n    this.element.style.setProperty('background-image', this.src)\r\n    if (this.inputElement) {\r\n      this.inputElement.value = ''\r\n    }\r\n\r\n    if (this.hiddenElement !== null) {\r\n      this.hiddenElement.value = '0'\r\n    }\r\n\r\n    // Fire canceled event\r\n    EventHandlerUtil.trigger(this.element, 'kt.imageinput.canceled', e)\r\n  }\r\n\r\n  private _remove = (e: Event) => {\r\n    e.preventDefault()\r\n\r\n    // Fire remove event\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.remove', e) === false) {\r\n      return\r\n    }\r\n\r\n    this.element.classList.remove('image-input-changed')\r\n    this.element.classList.add('image-input-empty')\r\n    if (this.wrapperElement) {\r\n      this.wrapperElement.style.setProperty('background-image', 'none')\r\n    }\r\n\r\n    if (this.inputElement) {\r\n      this.inputElement.value = ''\r\n    }\r\n\r\n    if (this.hiddenElement !== null) {\r\n      this.hiddenElement.value = '1'\r\n    }\r\n\r\n    // Fire removed event\r\n    EventHandlerUtil.trigger(this.element, 'kt.imageinput.removed', e)\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n  public getInputElement(): HTMLInputElement | null {\r\n    return this.inputElement\r\n  }\r\n\r\n  public getElement(): HTMLElement {\r\n    return this.element\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler)\r\n  }\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler)\r\n  }\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name)\r\n  }\r\n\r\n  public trigger = (name: string, event: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event)\r\n  }\r\n\r\n  // Static methods\r\n  public static getInstance = (\r\n    el: HTMLElement,\r\n    componentName: string = defaultImageInputQueires.componentName\r\n  ) => {\r\n    const ImageInput = DataUtil.get(el, componentName)\r\n    if (ImageInput) {\r\n      return ImageInput\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  public static createInstances = (\r\n    selector: string = defaultImageInputQueires.instanseQuery,\r\n    options: IImageInputOptions = defaultImageInputOptions,\r\n    queries: IImageInputQueries = defaultImageInputQueires\r\n  ) => {\r\n    const elements = document.body.querySelectorAll(selector)\r\n    elements.forEach((el) => {\r\n      const item = el as HTMLElement\r\n      let ImageInput = ImageInputComponent.getInstance(item)\r\n      if (!ImageInput) {\r\n        ImageInput = new ImageInputComponent(item, options, queries)\r\n      }\r\n    })\r\n  }\r\n\r\n  public static createInsance = (\r\n    selector: string = defaultImageInputQueires.instanseQuery,\r\n    options: IImageInputOptions = defaultImageInputOptions,\r\n    queries: IImageInputQueries = defaultImageInputQueires\r\n  ): ImageInputComponent | undefined => {\r\n    const element = document.body.querySelector(selector)\r\n    if (!element) {\r\n      return\r\n    }\r\n    const item = element as HTMLElement\r\n    let ImageInput = ImageInputComponent.getInstance(item)\r\n    if (!ImageInput) {\r\n      ImageInput = new ImageInputComponent(item, options, queries)\r\n    }\r\n    return ImageInput\r\n  }\r\n\r\n  public static bootstrap = (selector: string = defaultImageInputQueires.instanseQuery) => {\r\n    ImageInputComponent.createInstances(selector)\r\n  }\r\n\r\n  public static reinitialization = (selector: string = defaultImageInputQueires.instanseQuery) => {\r\n    ImageInputComponent.createInstances(selector)\r\n  }\r\n}\r\nexport {ImageInputComponent, defaultImageInputOptions, defaultImageInputQueires}\r\n"]},"metadata":{},"sourceType":"module"}