{"ast":null,"code":"import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlErrorCode, IntlError } from './error';\nvar DISPLAY_NAMES_OPTONS = ['localeMatcher', 'style', 'type', 'fallback'];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n  var locale = _a.locale,\n      onError = _a.onError;\n  var DisplayNames = Intl.DisplayNames;\n\n  if (!DisplayNames) {\n    onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n  }\n\n  var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n\n  try {\n    return getDisplayNames(locale, filteredOptions).of(value);\n  } catch (e) {\n    onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting display name.', e));\n  }\n}","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/@formatjs/intl/lib/src/displayName.js"],"names":["filterProps","FormatError","ErrorCode","IntlErrorCode","IntlError","DISPLAY_NAMES_OPTONS","formatDisplayName","_a","getDisplayNames","value","options","locale","onError","DisplayNames","Intl","MISSING_INTL_API","filteredOptions","of","e","FORMAT_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,SAAzC;AACA,IAAIC,oBAAoB,GAAG,CACvB,eADuB,EAEvB,OAFuB,EAGvB,MAHuB,EAIvB,UAJuB,CAA3B;AAMA,OAAO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,eAA/B,EAAgDC,KAAhD,EAAuDC,OAAvD,EAAgE;AACnE,MAAIC,MAAM,GAAGJ,EAAE,CAACI,MAAhB;AAAA,MAAwBC,OAAO,GAAGL,EAAE,CAACK,OAArC;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACD,YAAxB;;AACA,MAAI,CAACA,YAAL,EAAmB;AACfD,IAAAA,OAAO,CAAC,IAAIX,WAAJ,CAAgB,qHAAhB,EAAuIC,SAAS,CAACa,gBAAjJ,CAAD,CAAP;AACH;;AACD,MAAIC,eAAe,GAAGhB,WAAW,CAACU,OAAD,EAAUL,oBAAV,CAAjC;;AACA,MAAI;AACA,WAAOG,eAAe,CAACG,MAAD,EAASK,eAAT,CAAf,CAAyCC,EAAzC,CAA4CR,KAA5C,CAAP;AACH,GAFD,CAGA,OAAOS,CAAP,EAAU;AACNN,IAAAA,OAAO,CAAC,IAAIR,SAAJ,CAAcD,aAAa,CAACgB,YAA5B,EAA0C,gCAA1C,EAA4ED,CAA5E,CAAD,CAAP;AACH;AACJ","sourcesContent":["import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlErrorCode, IntlError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting display name.', e));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}