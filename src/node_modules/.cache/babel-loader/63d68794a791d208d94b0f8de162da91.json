{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n  invariant(intl, '[React Intl] Could not find required `intl` object. ' + '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), {\n  textComponent: React.Fragment\n});\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\n\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n  return function (parts) {\n    // eslint-disable-next-line prefer-rest-params\n    return formatXMLElementFn(React.Children.toArray(parts));\n  };\n}\nexport function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/node_modules/react-intl/lib/src/utils.js"],"names":["__assign","React","invariant","DEFAULT_INTL_CONFIG","CORE_DEFAULT_INTL_CONFIG","invariantIntlContext","intl","textComponent","Fragment","assignUniqueKeysToParts","formatXMLElementFn","parts","Children","toArray","shallowEqual","objA","objB","aKeys","Object","keys","bKeys","len","length","i","key","prototype","hasOwnProperty","call"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,mBAAmB,IAAIC,wBAAhC,QAAgE,gBAAhE;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACvCJ,EAAAA,SAAS,CAACI,IAAD,EAAO,yDACZ,0DADK,CAAT;AAEH;AACD,OAAO,IAAIH,mBAAmB,GAAGH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKI,wBAAL,CAAT,EAAyC;AAAEG,EAAAA,aAAa,EAAEN,KAAK,CAACO;AAAvB,CAAzC,CAAlC;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,kBAAjC,EAAqD;AACxD,SAAO,UAAUC,KAAV,EAAiB;AACpB;AACA,WAAOD,kBAAkB,CAACT,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBF,KAAvB,CAAD,CAAzB;AACH,GAHD;AAIH;AACD,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AACrC,MAAID,IAAI,KAAKC,IAAb,EAAmB;AACf,WAAO,IAAP;AACH;;AACD,MAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB;AAChB,WAAO,KAAP;AACH;;AACD,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAZ;AACA,MAAIK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAZ;AACA,MAAIK,GAAG,GAAGJ,KAAK,CAACK,MAAhB;;AACA,MAAIF,KAAK,CAACE,MAAN,KAAiBD,GAArB,EAA0B;AACtB,WAAO,KAAP;AACH;;AACD,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,QAAIC,GAAG,GAAGP,KAAK,CAACM,CAAD,CAAf;;AACA,QAAIR,IAAI,CAACS,GAAD,CAAJ,KAAcR,IAAI,CAACQ,GAAD,CAAlB,IACA,CAACN,MAAM,CAACO,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCX,IAArC,EAA2CQ,GAA3C,CADL,EACsD;AAClD,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH","sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n"]},"metadata":{},"sourceType":"module"}