{"ast":null,"code":"import { getElementOffset, getScrollTop, getAttributeValueByBreakpoint, getUniqueIdWithPrefix, getObjectPropertyValueByKey, stringSnakeToCamel, getCSS, DataUtil, ElementAnimateUtil, ElementStyleUtil, EventHandlerUtil } from '../_utils/index';\nconst defaultStickyOptions = {\n  offset: 200,\n  reverse: false,\n  animation: true,\n  animationSpeed: '0.3s',\n  animationClass: 'animation-slide-in-down'\n};\n\nclass StickyComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.instanceName = '';\n    this.attributeName = void 0;\n    this.eventTriggerState = void 0;\n    this.lastScrollTop = void 0;\n\n    this.scroll = () => {\n      let offset = this.getOption('offset');\n      let reverse = this.getOption('reverse'); // Exit if false\n\n      if (offset === false) {\n        return;\n      }\n\n      let offsetNum = 0;\n\n      if (typeof offset === 'string') {\n        offsetNum = parseInt(offset);\n      }\n\n      const st = getScrollTop(); // Reverse scroll mode\n\n      if (reverse === true) {\n        // Release on reverse scroll mode\n        if (st > offsetNum && this.lastScrollTop < st) {\n          if (document.body.hasAttribute(this.attributeName) === false) {\n            this.enable();\n            document.body.setAttribute(this.attributeName, 'on');\n          }\n\n          if (this.eventTriggerState === true) {\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.on');\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n            this.eventTriggerState = false;\n          }\n        } else {\n          // Back scroll mode\n          if (document.body.hasAttribute(this.attributeName)) {\n            this.disable();\n            document.body.removeAttribute(this.attributeName);\n          }\n\n          if (this.eventTriggerState === false) {\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.off');\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n            this.eventTriggerState = true;\n          }\n        }\n\n        this.lastScrollTop = st;\n        return;\n      } // Classic scroll mode\n\n\n      if (st > offsetNum) {\n        if (document.body.hasAttribute(this.attributeName) === false) {\n          this.enable();\n          document.body.setAttribute(this.attributeName, 'on');\n        }\n\n        if (this.eventTriggerState === true) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.on');\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n          this.eventTriggerState = false;\n        }\n      } else {\n        // back scroll mode\n        if (document.body.hasAttribute(this.attributeName) === true) {\n          this.disable();\n          document.body.removeAttribute(this.attributeName);\n        }\n\n        if (this.eventTriggerState === false) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.off');\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n          this.eventTriggerState = true;\n        }\n      }\n    };\n\n    this.getOption = name => {\n      const dataStickyAttr = 'data-kt-sticky-' + name;\n\n      if (this.element.hasAttribute(dataStickyAttr) === true) {\n        const attrValueInStr = this.element.getAttribute(dataStickyAttr);\n        const attrValue = getAttributeValueByBreakpoint(attrValueInStr || '');\n\n        if (attrValue !== null && String(attrValue) === 'true') {\n          return true;\n        } else if (attrValue !== null && String(attrValue) === 'false') {\n          return false;\n        }\n\n        return attrValue;\n      } else {\n        const optionName = stringSnakeToCamel(name);\n        const option = getObjectPropertyValueByKey(this.options, optionName);\n\n        if (option) {\n          return getAttributeValueByBreakpoint(option);\n        }\n      }\n    };\n\n    this.disable = () => {\n      ElementStyleUtil.remove(this.element, 'top');\n      ElementStyleUtil.remove(this.element, 'width');\n      ElementStyleUtil.remove(this.element, 'left');\n      ElementStyleUtil.remove(this.element, 'right');\n      ElementStyleUtil.remove(this.element, 'z-index');\n      ElementStyleUtil.remove(this.element, 'position');\n    };\n\n    this.enable = (update = false) => {\n      const top = this.getOption('top');\n      const left = this.getOption('left'); // const right = this.getOption(\"right\");\n\n      let width = this.getOption('width');\n      const zindex = this.getOption('zindex');\n\n      if (update !== true && this.getOption('animation') === true) {\n        ElementStyleUtil.set(this.element, 'animationDuration', this.getOption('animationSpeed'));\n        ElementAnimateUtil.animateClass(this.element, 'animation ' + this.getOption('animationClass'));\n      }\n\n      if (zindex !== null) {\n        ElementStyleUtil.set(this.element, 'z-index', zindex);\n        ElementStyleUtil.set(this.element, 'position', 'fixed');\n      }\n\n      if (top !== null) {\n        ElementStyleUtil.set(this.element, 'top', top);\n      }\n\n      if (width !== null && width !== undefined) {\n        const widthTarget = getObjectPropertyValueByKey(width, 'target');\n\n        if (widthTarget) {\n          const targetElement = document.querySelector(widthTarget);\n\n          if (targetElement) {\n            width = getCSS(targetElement, 'width');\n          }\n        }\n\n        ElementStyleUtil.set(this.element, 'width', width);\n      }\n\n      if (left !== null) {\n        if (String(left).toLowerCase() === 'auto') {\n          var offsetLeft = getElementOffset(this.element).left;\n\n          if (offsetLeft > 0) {\n            ElementStyleUtil.set(this.element, 'left', String(offsetLeft) + 'px');\n          }\n        }\n      }\n    };\n\n    this.update = () => {\n      if (document.body.hasAttribute(this.attributeName) === true) {\n        this.disable();\n        document.body.removeAttribute(this.attributeName);\n        this.enable(true);\n        document.body.setAttribute(this.attributeName, 'on');\n      }\n    };\n\n    this.on = (name, callBack) => {\n      return EventHandlerUtil.on(this.element, name, callBack);\n    };\n\n    this.one = (name, callback) => {\n      return EventHandlerUtil.one(this.element, name, callback);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.trigger = name => {\n      return EventHandlerUtil.trigger(this.element, name);\n    };\n\n    this.element = _element;\n    this.options = Object.assign(defaultStickyOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('sticky');\n    this.instanceName = this.element.getAttribute('data-kt-sticky-name');\n    this.attributeName = 'data-kt-sticky-' + this.instanceName;\n    this.eventTriggerState = true;\n    this.lastScrollTop = 0; // Event Handlers\n\n    window.addEventListener('scroll', this.scroll); // Initial Launch\n\n    this.scroll();\n    DataUtil.set(this.element, 'sticky', this);\n  }\n\n  // Static methods\n  static hasInstace(element) {\n    return DataUtil.has(element, 'sticky');\n  }\n\n  static getInstance(element) {\n    if (element !== null && StickyComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'sticky');\n    }\n  } // Create Instances\n\n\n  static createInstances(selector) {\n    const elements = document.body.querySelectorAll(selector);\n    elements.forEach(element => {\n      const item = element;\n      let sticky = StickyComponent.getInstance(item);\n\n      if (!sticky) {\n        sticky = new StickyComponent(item, defaultStickyOptions);\n      }\n    });\n  }\n\n  static bootstrap(attr = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr);\n  }\n\n  static reInitialization(attr = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr);\n  }\n\n}\n\nStickyComponent.createInsance = (selector, options = defaultStickyOptions) => {\n  const element = document.body.querySelector(selector);\n\n  if (!element) {\n    return;\n  }\n\n  const item = element;\n  let sticky = StickyComponent.getInstance(item);\n\n  if (!sticky) {\n    sticky = new StickyComponent(item, options);\n  }\n\n  return sticky;\n};\n\nexport { StickyComponent, defaultStickyOptions };","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/assets/ts/components/_StickyComponent.ts"],"names":["getElementOffset","getScrollTop","getAttributeValueByBreakpoint","getUniqueIdWithPrefix","getObjectPropertyValueByKey","stringSnakeToCamel","getCSS","DataUtil","ElementAnimateUtil","ElementStyleUtil","EventHandlerUtil","defaultStickyOptions","offset","reverse","animation","animationSpeed","animationClass","StickyComponent","constructor","_element","options","element","instanceUid","instanceName","attributeName","eventTriggerState","lastScrollTop","scroll","getOption","offsetNum","parseInt","st","document","body","hasAttribute","enable","setAttribute","trigger","disable","removeAttribute","name","dataStickyAttr","attrValueInStr","getAttribute","attrValue","String","optionName","option","remove","update","top","left","width","zindex","set","animateClass","undefined","widthTarget","targetElement","querySelector","toLowerCase","offsetLeft","on","callBack","one","callback","off","Object","assign","window","addEventListener","hasInstace","has","getInstance","get","createInstances","selector","elements","querySelectorAll","forEach","item","sticky","bootstrap","attr","reInitialization","createInsance"],"mappings":"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","sourcesContent":["import {\r\n  getElementOffset,\r\n  getScrollTop,\r\n  getAttributeValueByBreakpoint,\r\n  getUniqueIdWithPrefix,\r\n  getObjectPropertyValueByKey,\r\n  stringSnakeToCamel,\r\n  getCSS,\r\n  DataUtil,\r\n  ElementAnimateUtil,\r\n  ElementStyleUtil,\r\n  EventHandlerUtil,\r\n} from '../_utils/index'\r\n\r\nexport interface StickyOptions {\r\n  offset: number\r\n  reverse: boolean\r\n  animation: boolean\r\n  animationSpeed: string\r\n  animationClass: string\r\n}\r\n\r\nconst defaultStickyOptions: StickyOptions = {\r\n  offset: 200,\r\n  reverse: false,\r\n  animation: true,\r\n  animationSpeed: '0.3s',\r\n  animationClass: 'animation-slide-in-down',\r\n}\r\n\r\nclass StickyComponent {\r\n  element: HTMLElement\r\n  options: StickyOptions\r\n  instanceUid: string\r\n  instanceName: string | null = ''\r\n  attributeName: string\r\n  eventTriggerState: boolean\r\n  lastScrollTop: number\r\n\r\n  constructor(_element: HTMLElement, options: StickyOptions) {\r\n    this.element = _element\r\n    this.options = Object.assign(defaultStickyOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('sticky')\r\n    this.instanceName = this.element.getAttribute('data-kt-sticky-name')\r\n    this.attributeName = 'data-kt-sticky-' + this.instanceName\r\n    this.eventTriggerState = true\r\n    this.lastScrollTop = 0\r\n\r\n    // Event Handlers\r\n    window.addEventListener('scroll', this.scroll)\r\n\r\n    // Initial Launch\r\n    this.scroll()\r\n\r\n    DataUtil.set(this.element, 'sticky', this)\r\n  }\r\n\r\n  private scroll = () => {\r\n    let offset = this.getOption('offset')\r\n    let reverse = this.getOption('reverse')\r\n\r\n    // Exit if false\r\n    if (offset === false) {\r\n      return\r\n    }\r\n\r\n    let offsetNum = 0\r\n    if (typeof offset === 'string') {\r\n      offsetNum = parseInt(offset)\r\n    }\r\n\r\n    const st = getScrollTop()\r\n\r\n    // Reverse scroll mode\r\n    if (reverse === true) {\r\n      // Release on reverse scroll mode\r\n      if (st > offsetNum && this.lastScrollTop < st) {\r\n        if (document.body.hasAttribute(this.attributeName) === false) {\r\n          this.enable()\r\n          document.body.setAttribute(this.attributeName, 'on')\r\n        }\r\n\r\n        if (this.eventTriggerState === true) {\r\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\r\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\r\n\r\n          this.eventTriggerState = false\r\n        }\r\n      } else {\r\n        // Back scroll mode\r\n        if (document.body.hasAttribute(this.attributeName)) {\r\n          this.disable()\r\n          document.body.removeAttribute(this.attributeName)\r\n        }\r\n\r\n        if (this.eventTriggerState === false) {\r\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\r\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\r\n\r\n          this.eventTriggerState = true\r\n        }\r\n      }\r\n\r\n      this.lastScrollTop = st\r\n      return\r\n    }\r\n\r\n    // Classic scroll mode\r\n    if (st > offsetNum) {\r\n      if (document.body.hasAttribute(this.attributeName) === false) {\r\n        this.enable()\r\n        document.body.setAttribute(this.attributeName, 'on')\r\n      }\r\n\r\n      if (this.eventTriggerState === true) {\r\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\r\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\r\n        this.eventTriggerState = false\r\n      }\r\n    } else {\r\n      // back scroll mode\r\n      if (document.body.hasAttribute(this.attributeName) === true) {\r\n        this.disable()\r\n        document.body.removeAttribute(this.attributeName)\r\n      }\r\n\r\n      if (this.eventTriggerState === false) {\r\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\r\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\r\n        this.eventTriggerState = true\r\n      }\r\n    }\r\n  }\r\n\r\n  private getOption = (name: string) => {\r\n    const dataStickyAttr = 'data-kt-sticky-' + name\r\n    if (this.element.hasAttribute(dataStickyAttr) === true) {\r\n      const attrValueInStr = this.element.getAttribute(dataStickyAttr)\r\n      const attrValue = getAttributeValueByBreakpoint(attrValueInStr || '')\r\n      if (attrValue !== null && String(attrValue) === 'true') {\r\n        return true\r\n      } else if (attrValue !== null && String(attrValue) === 'false') {\r\n        return false\r\n      }\r\n\r\n      return attrValue\r\n    } else {\r\n      const optionName = stringSnakeToCamel(name)\r\n      const option = getObjectPropertyValueByKey(this.options, optionName)\r\n      if (option) {\r\n        return getAttributeValueByBreakpoint(option)\r\n      }\r\n    }\r\n  }\r\n\r\n  private disable = () => {\r\n    ElementStyleUtil.remove(this.element, 'top')\r\n    ElementStyleUtil.remove(this.element, 'width')\r\n    ElementStyleUtil.remove(this.element, 'left')\r\n    ElementStyleUtil.remove(this.element, 'right')\r\n    ElementStyleUtil.remove(this.element, 'z-index')\r\n    ElementStyleUtil.remove(this.element, 'position')\r\n  }\r\n\r\n  private enable = (update: boolean = false) => {\r\n    const top = this.getOption('top')\r\n    const left = this.getOption('left')\r\n    // const right = this.getOption(\"right\");\r\n    let width = this.getOption('width')\r\n    const zindex = this.getOption('zindex')\r\n\r\n    if (update !== true && this.getOption('animation') === true) {\r\n      ElementStyleUtil.set(this.element, 'animationDuration', this.getOption('animationSpeed'))\r\n      ElementAnimateUtil.animateClass(this.element, 'animation ' + this.getOption('animationClass'))\r\n    }\r\n\r\n    if (zindex !== null) {\r\n      ElementStyleUtil.set(this.element, 'z-index', zindex)\r\n      ElementStyleUtil.set(this.element, 'position', 'fixed')\r\n    }\r\n\r\n    if (top !== null) {\r\n      ElementStyleUtil.set(this.element, 'top', top)\r\n    }\r\n\r\n    if (width !== null && width !== undefined) {\r\n      const widthTarget = getObjectPropertyValueByKey(width, 'target')\r\n      if (widthTarget) {\r\n        const targetElement = document.querySelector(widthTarget)\r\n        if (targetElement) {\r\n          width = getCSS(targetElement, 'width')\r\n        }\r\n      }\r\n      ElementStyleUtil.set(this.element, 'width', width)\r\n    }\r\n\r\n    if (left !== null) {\r\n      if (String(left).toLowerCase() === 'auto') {\r\n        var offsetLeft = getElementOffset(this.element).left\r\n\r\n        if (offsetLeft > 0) {\r\n          ElementStyleUtil.set(this.element, 'left', String(offsetLeft) + 'px')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public update = () => {\r\n    if (document.body.hasAttribute(this.attributeName) === true) {\r\n      this.disable()\r\n      document.body.removeAttribute(this.attributeName)\r\n      this.enable(true)\r\n      document.body.setAttribute(this.attributeName, 'on')\r\n    }\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, callBack: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, callBack)\r\n  }\r\n\r\n  public one = (name: string, callback: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, callback)\r\n  }\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name)\r\n  }\r\n\r\n  public trigger = (name: string) => {\r\n    return EventHandlerUtil.trigger(this.element, name)\r\n  }\r\n\r\n  // Static methods\r\n  public static hasInstace(element: HTMLElement) {\r\n    return DataUtil.has(element, 'sticky')\r\n  }\r\n\r\n  public static getInstance(element: HTMLElement) {\r\n    if (element !== null && StickyComponent.hasInstace(element)) {\r\n      return DataUtil.get(element, 'sticky')\r\n    }\r\n  }\r\n\r\n  // Create Instances\r\n  public static createInstances(selector: string) {\r\n    const elements = document.body.querySelectorAll(selector)\r\n    elements.forEach((element) => {\r\n      const item = element as HTMLElement\r\n      let sticky = StickyComponent.getInstance(item)\r\n      if (!sticky) {\r\n        sticky = new StickyComponent(item, defaultStickyOptions)\r\n      }\r\n    })\r\n  }\r\n\r\n  public static createInsance = (\r\n    selector: string,\r\n    options: StickyOptions = defaultStickyOptions\r\n  ): StickyComponent | undefined => {\r\n    const element = document.body.querySelector(selector)\r\n    if (!element) {\r\n      return\r\n    }\r\n    const item = element as HTMLElement\r\n    let sticky = StickyComponent.getInstance(item)\r\n    if (!sticky) {\r\n      sticky = new StickyComponent(item, options)\r\n    }\r\n    return sticky\r\n  }\r\n\r\n  public static bootstrap(attr: string = '[data-kt-sticky=\"true\"]') {\r\n    StickyComponent.createInstances(attr)\r\n  }\r\n\r\n  public static reInitialization(attr: string = '[data-kt-sticky=\"true\"]') {\r\n    StickyComponent.createInstances(attr)\r\n  }\r\n}\r\n\r\nexport {StickyComponent, defaultStickyOptions}\r\n"]},"metadata":{},"sourceType":"module"}