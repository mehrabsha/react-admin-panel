{"ast":null,"code":"var _jsxFileName = \"/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/layout/core/MetronicSplashScreen.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetronicSplashScreenContext = /*#__PURE__*/createContext(undefined);\n\nconst MetronicSplashScreenProvider = ({\n  children\n}) => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  let visible = count > 0;\n  useEffect(() => {\n    const splashScreen = document.getElementById('splash-screen'); // Show SplashScreen\n\n    if (splashScreen && visible) {\n      splashScreen.classList.remove('hidden');\n      return () => {\n        splashScreen.classList.add('hidden');\n      };\n    } // Hide SplashScreen\n\n\n    let timeout;\n\n    if (splashScreen && !visible) {\n      timeout = window.setTimeout(() => {\n        splashScreen.classList.add('hidden');\n      }, 3000);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [visible]);\n  return /*#__PURE__*/_jsxDEV(MetronicSplashScreenContext.Provider, {\n    value: setCount,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MetronicSplashScreenProvider, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = MetronicSplashScreenProvider;\n\nconst LayoutSplashScreen = ({\n  visible = true\n}) => {\n  _s2();\n\n  // Everything are ready - remove splashscreen\n  const setCount = useContext(MetronicSplashScreenContext);\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    if (setCount) {\n      setCount(prev => {\n        return prev + 1;\n      });\n    }\n\n    return () => {\n      if (setCount) {\n        setCount(prev => {\n          return prev - 1;\n        });\n      }\n    };\n  }, [setCount, visible]);\n  return null;\n};\n\n_s2(LayoutSplashScreen, \"7vsTmQ5v/VbQFP1+FvIbjUJDPow=\");\n\n_c2 = LayoutSplashScreen;\nexport { MetronicSplashScreenProvider, LayoutSplashScreen };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MetronicSplashScreenProvider\");\n$RefreshReg$(_c2, \"LayoutSplashScreen\");","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/layout/core/MetronicSplashScreen.tsx"],"names":["React","createContext","useContext","useState","useEffect","MetronicSplashScreenContext","undefined","MetronicSplashScreenProvider","children","count","setCount","visible","splashScreen","document","getElementById","classList","remove","add","timeout","window","setTimeout","clearTimeout","LayoutSplashScreen","prev"],"mappings":";;;;AAAA,OAAOA,KAAP,IAEEC,aAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,QAQO,OARP;;AAUA,MAAMC,2BAA2B,gBAAGJ,aAAa,CAC/CK,SAD+C,CAAjD;;AAIA,MAAMC,4BAAgC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIQ,OAAO,GAAGF,KAAK,GAAG,CAAtB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB,CADc,CAGd;;AACA,QAAIF,YAAY,IAAID,OAApB,EAA6B;AAC3BC,MAAAA,YAAY,CAACG,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AAEA,aAAO,MAAM;AACXJ,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFD;AAGD,KAVa,CAYd;;;AACA,QAAIC,OAAJ;;AACA,QAAIN,YAAY,IAAI,CAACD,OAArB,EAA8B;AAC5BO,MAAAA,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AAChCR,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AAED,WAAO,MAAM;AACXI,MAAAA,YAAY,CAACH,OAAD,CAAZ;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACP,OAAD,CAvBM,CAAT;AAyBA,sBACE,QAAC,2BAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAED,QAA7C;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCD;;GAAMD,4B;;KAAAA,4B;;AAoCN,MAAMe,kBAA2C,GAAG,CAAC;AAACX,EAAAA,OAAO,GAAG;AAAX,CAAD,KAAsB;AAAA;;AACxE;AACA,QAAMD,QAAQ,GAAGR,UAAU,CAACG,2BAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,OAAL,EAAc;AACZ;AACD;;AAED,QAAID,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAEa,IAAD,IAAU;AACjB,eAAOA,IAAI,GAAG,CAAd;AACD,OAFO,CAAR;AAGD;;AAED,WAAO,MAAM;AACX,UAAIb,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAEa,IAAD,IAAU;AACjB,iBAAOA,IAAI,GAAG,CAAd;AACD,SAFO,CAAR;AAGD;AACF,KAND;AAOD,GAlBQ,EAkBN,CAACb,QAAD,EAAWC,OAAX,CAlBM,CAAT;AAoBA,SAAO,IAAP;AACD,CAzBD;;IAAMW,kB;;MAAAA,kB;AA2BN,SAAQf,4BAAR,EAAsCe,kBAAtC","sourcesContent":["import React, {\r\n  FC,\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  SetStateAction,\r\n  Dispatch,\r\n} from 'react'\r\n\r\nconst MetronicSplashScreenContext = createContext<Dispatch<SetStateAction<number>> | undefined>(\r\n  undefined\r\n)\r\n\r\nconst MetronicSplashScreenProvider: FC = ({children}) => {\r\n  const [count, setCount] = useState(0)\r\n  let visible = count > 0\r\n\r\n  useEffect(() => {\r\n    const splashScreen = document.getElementById('splash-screen')\r\n\r\n    // Show SplashScreen\r\n    if (splashScreen && visible) {\r\n      splashScreen.classList.remove('hidden')\r\n\r\n      return () => {\r\n        splashScreen.classList.add('hidden')\r\n      }\r\n    }\r\n\r\n    // Hide SplashScreen\r\n    let timeout: number\r\n    if (splashScreen && !visible) {\r\n      timeout = window.setTimeout(() => {\r\n        splashScreen.classList.add('hidden')\r\n      }, 3000)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [visible])\r\n\r\n  return (\r\n    <MetronicSplashScreenContext.Provider value={setCount}>\r\n      {children}\r\n    </MetronicSplashScreenContext.Provider>\r\n  )\r\n}\r\n\r\nconst LayoutSplashScreen: FC<{visible?: boolean}> = ({visible = true}) => {\r\n  // Everything are ready - remove splashscreen\r\n  const setCount = useContext(MetronicSplashScreenContext)\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      return\r\n    }\r\n\r\n    if (setCount) {\r\n      setCount((prev) => {\r\n        return prev + 1\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      if (setCount) {\r\n        setCount((prev) => {\r\n          return prev - 1\r\n        })\r\n      }\r\n    }\r\n  }, [setCount, visible])\r\n\r\n  return null\r\n}\r\n\r\nexport {MetronicSplashScreenProvider, LayoutSplashScreen}\r\n"]},"metadata":{},"sourceType":"module"}