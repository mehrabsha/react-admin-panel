{"ast":null,"code":"import { getElementIndex, getUniqueIdWithPrefix, ElementAnimateUtil, EventHandlerUtil, DataUtil, DOMEventHandlerUtil, ElementStyleUtil } from '../_utils/index';\nconst defaultStepperOptions = {\n  startIndex: 1,\n  animation: false,\n  animationSpeed: '0.3s',\n  animationNextClass: 'animate__animated animate__slideInRight animate__fast',\n  animationPreviousClass: 'animate__animated animate__slideInLeft animate__fast'\n};\n\nclass StepperComponent {\n  constructor(_element, options) {\n    var _this$steps;\n\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.steps = void 0;\n    this.btnNext = void 0;\n    this.btnPrev = void 0;\n    this.btnSubmit = void 0;\n    this.totatStepsNumber = 0;\n    this.passedStepIndex = 0;\n    this.currentStepIndex = 1;\n\n    this._goTo = index => {\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.change'); // Skip if this step is already shown\n\n      if (index === this.currentStepIndex || index > this.totatStepsNumber || index < 0) {\n        return;\n      } // Validate step number\n\n\n      index = parseInt(index.toString()); // Set current step\n\n      this.passedStepIndex = this.currentStepIndex;\n      this.currentStepIndex = index; // Refresh elements\n\n      this.refreshUI();\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.changed');\n    };\n\n    this.initHandlers = () => {\n      var _this$btnNext, _this$btnPrev;\n\n      (_this$btnNext = this.btnNext) === null || _this$btnNext === void 0 ? void 0 : _this$btnNext.addEventListener('click', e => {\n        e.preventDefault();\n        EventHandlerUtil.trigger(this.element, 'kt.stepper.next', e);\n      });\n      (_this$btnPrev = this.btnPrev) === null || _this$btnPrev === void 0 ? void 0 : _this$btnPrev.addEventListener('click', e => {\n        e.preventDefault();\n        EventHandlerUtil.trigger(this.element, 'kt.stepper.previous', e);\n      });\n      DOMEventHandlerUtil.on(this.element, '[data-kt-stepper-action=\"step\"]', 'click', e => {\n        e.preventDefault();\n\n        if (this.steps && this.steps.length > 0) {\n          for (let i = 0; i < this.steps.length; i++) {\n            if (this.steps[i] === this.element) {\n              let index = i + 1;\n\n              const stepDirection = this._getStepDirection(index);\n\n              EventHandlerUtil.trigger(this.element, `stepper.${stepDirection}`, e);\n              return;\n            }\n          }\n        }\n      });\n    };\n\n    this._getStepDirection = index => {\n      return index > this.currentStepIndex ? 'next' : 'previous';\n    };\n\n    this.getStepContent = index => {\n      const content = this.element.querySelectorAll('[data-kt-stepper-element=\"content\"]');\n\n      if (!content) {\n        return false;\n      }\n\n      if (content[index - 1]) {\n        return content[index - 1];\n      }\n\n      return false;\n    };\n\n    this.getLastStepIndex = () => {\n      return this.totatStepsNumber;\n    };\n\n    this.getTotalStepsNumber = () => {\n      return this.totatStepsNumber;\n    };\n\n    this.refreshUI = () => {\n      let state = '';\n\n      if (this.isLastStep()) {\n        state = 'last';\n      } else if (this.isFirstStep()) {\n        state = 'first';\n      } else {\n        state = 'between';\n      } // Set state class\n\n\n      this.element.classList.remove('last');\n      this.element.classList.remove('first');\n      this.element.classList.remove('between');\n      this.element.classList.add(state); // Step Items\n\n      const elements = this.element.querySelectorAll('[data-kt-stepper-element=\"nav\"], [data-kt-stepper-element=\"content\"], [data-kt-stepper-element=\"info\"]');\n\n      if (!elements || elements.length <= 0) {\n        return;\n      }\n\n      for (var i = 0, len = elements.length; i < len; i++) {\n        var element = elements[i];\n        var index = getElementIndex(element) + 1;\n        element.classList.remove('current');\n        element.classList.remove('completed');\n        element.classList.remove('pending');\n\n        if (index === this.currentStepIndex) {\n          element.classList.add('current');\n\n          if (this.options.animation !== false && element.getAttribute('data-kt-stepper-element') === 'content') {\n            ElementStyleUtil.set(element, 'animationDuration', this.options.animationSpeed);\n            const animation = this._getStepDirection(this.passedStepIndex) === 'previous' ? this.options.animationPreviousClass : this.options.animationNextClass;\n            ElementAnimateUtil.animateClass(element, animation);\n          }\n        } else {\n          if (index < this.currentStepIndex) {\n            element.classList.add('completed');\n          } else {\n            element.classList.add('pending');\n          }\n        }\n      }\n    };\n\n    this.isLastStep = () => {\n      return this.currentStepIndex === this.totatStepsNumber;\n    };\n\n    this.isFirstStep = () => {\n      return this.currentStepIndex === 1;\n    };\n\n    this.isBetweenStep = () => {\n      return this.isLastStep() === false && this.isFirstStep() === false;\n    };\n\n    this.goto = index => {\n      return this._goTo(index);\n    };\n\n    this.goNext = () => {\n      return this.goto(this.getNextStepIndex());\n    };\n\n    this.goPrev = () => {\n      return this.goto(this.getPrevStepIndex());\n    };\n\n    this.goFirst = () => {\n      return this.goto(1);\n    };\n\n    this.goLast = () => {\n      return this.goto(this.getLastStepIndex());\n    };\n\n    this.getCurrentStepIndex = () => {\n      return this.currentStepIndex;\n    };\n\n    this.getNextStepIndex = () => {\n      if (this.totatStepsNumber >= this.currentStepIndex + 1) {\n        return this.currentStepIndex + 1;\n      } else {\n        return this.totatStepsNumber;\n      }\n    };\n\n    this.getPassedStepIndex = () => {\n      return this.passedStepIndex;\n    };\n\n    this.getPrevStepIndex = () => {\n      if (this.currentStepIndex - 1 > 1) {\n        return this.currentStepIndex - 1;\n      } else {\n        return 1;\n      }\n    };\n\n    this.getElement = index => {\n      return this.element;\n    };\n\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.destroy = () => {\n      console.log('destroy stepper');\n    };\n\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n\n    this.element = _element;\n    this.options = Object.assign(defaultStepperOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('stepper'); // Elements\n\n    this.steps = this.element.querySelectorAll('[data-kt-stepper-element=\"nav\"]');\n    this.btnNext = this.element.querySelector('[data-kt-stepper-action=\"next\"]');\n    this.btnPrev = this.element.querySelector('[data-kt-stepper-action=\"previous\"]');\n    this.btnSubmit = this.element.querySelector('[data-kt-stepper-action=\"submit\"]'); // Variables\n\n    this.totatStepsNumber = ((_this$steps = this.steps) === null || _this$steps === void 0 ? void 0 : _this$steps.length) | 0;\n    this.passedStepIndex = 0;\n    this.currentStepIndex = 1; // Set Current Step\n\n    if (this.options.startIndex > 1) {\n      this._goTo(this.options.startIndex);\n    } // Event Handlers\n\n\n    this.initHandlers(); // Bind Instance\n\n    DataUtil.set(this.element, 'stepper', this);\n  }\n\n  // Static methods\n  static hasInstace(element) {\n    return DataUtil.has(element, 'stepper');\n  }\n\n  static getInstance(element) {\n    if (element !== null && StepperComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'stepper');\n    }\n\n    return null;\n  } // Create Instances\n\n\n  static createInstances(selector) {\n    const elements = document.body.querySelectorAll(selector);\n    elements.forEach(element => {\n      const item = element;\n      let stepper = StepperComponent.getInstance(item);\n\n      if (!stepper) {\n        stepper = new StepperComponent(item, defaultStepperOptions);\n      }\n    });\n  }\n\n  static bootstrap(attr = '[data-kt-stepper]') {\n    StepperComponent.createInstances(attr);\n  }\n\n}\n\nStepperComponent.createInsance = (element, options = defaultStepperOptions) => {\n  if (!element) {\n    return null;\n  }\n\n  let stepper = StepperComponent.getInstance(element);\n\n  if (!stepper) {\n    stepper = new StepperComponent(element, options);\n  }\n\n  return stepper;\n};\n\nexport { StepperComponent, defaultStepperOptions };","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/_metronic/assets/ts/components/_StepperComponent.ts"],"names":["getElementIndex","getUniqueIdWithPrefix","ElementAnimateUtil","EventHandlerUtil","DataUtil","DOMEventHandlerUtil","ElementStyleUtil","defaultStepperOptions","startIndex","animation","animationSpeed","animationNextClass","animationPreviousClass","StepperComponent","constructor","_element","options","element","instanceUid","steps","btnNext","btnPrev","btnSubmit","totatStepsNumber","passedStepIndex","currentStepIndex","_goTo","index","trigger","parseInt","toString","refreshUI","initHandlers","addEventListener","e","preventDefault","on","length","i","stepDirection","_getStepDirection","getStepContent","content","querySelectorAll","getLastStepIndex","getTotalStepsNumber","state","isLastStep","isFirstStep","classList","remove","add","elements","len","getAttribute","set","animateClass","isBetweenStep","goto","goNext","getNextStepIndex","goPrev","getPrevStepIndex","goFirst","goLast","getCurrentStepIndex","getPassedStepIndex","getElement","name","handler","one","off","destroy","console","log","event","Object","assign","querySelector","hasInstace","has","getInstance","get","createInstances","selector","document","body","forEach","item","stepper","bootstrap","attr","createInsance"],"mappings":"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","sourcesContent":["import {\r\n  getElementIndex,\r\n  getUniqueIdWithPrefix,\r\n  ElementAnimateUtil,\r\n  EventHandlerUtil,\r\n  DataUtil,\r\n  DOMEventHandlerUtil,\r\n  ElementStyleUtil,\r\n} from '../_utils/index'\r\n\r\nexport interface IStepperOptions {\r\n  startIndex: number\r\n  animation: boolean\r\n  animationSpeed: string\r\n  animationNextClass: string\r\n  animationPreviousClass: string\r\n}\r\n\r\nconst defaultStepperOptions: IStepperOptions = {\r\n  startIndex: 1,\r\n  animation: false,\r\n  animationSpeed: '0.3s',\r\n  animationNextClass: 'animate__animated animate__slideInRight animate__fast',\r\n  animationPreviousClass: 'animate__animated animate__slideInLeft animate__fast',\r\n}\r\n\r\nclass StepperComponent {\r\n  element: HTMLElement\r\n  options: IStepperOptions\r\n  instanceUid: string\r\n  steps: NodeListOf<HTMLElement>\r\n  btnNext: HTMLElement | null\r\n  btnPrev: HTMLElement | null\r\n  btnSubmit: HTMLElement | null\r\n  totatStepsNumber: number = 0\r\n  passedStepIndex: number = 0\r\n  currentStepIndex: number = 1\r\n\r\n  constructor(_element: HTMLElement, options: IStepperOptions) {\r\n    this.element = _element\r\n    this.options = Object.assign(defaultStepperOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('stepper')\r\n\r\n    // Elements\r\n    this.steps = this.element.querySelectorAll('[data-kt-stepper-element=\"nav\"]')\r\n    this.btnNext = this.element.querySelector('[data-kt-stepper-action=\"next\"]')\r\n    this.btnPrev = this.element.querySelector('[data-kt-stepper-action=\"previous\"]')\r\n    this.btnSubmit = this.element.querySelector('[data-kt-stepper-action=\"submit\"]')\r\n\r\n    // Variables\r\n    this.totatStepsNumber = this.steps?.length | 0\r\n    this.passedStepIndex = 0\r\n    this.currentStepIndex = 1\r\n\r\n    // Set Current Step\r\n    if (this.options.startIndex > 1) {\r\n      this._goTo(this.options.startIndex)\r\n    }\r\n\r\n    // Event Handlers\r\n    this.initHandlers()\r\n\r\n    // Bind Instance\r\n    DataUtil.set(this.element, 'stepper', this)\r\n  }\r\n\r\n  private _goTo = (index: number) => {\r\n    EventHandlerUtil.trigger(this.element, 'kt.stepper.change')\r\n    // Skip if this step is already shown\r\n    if (index === this.currentStepIndex || index > this.totatStepsNumber || index < 0) {\r\n      return\r\n    }\r\n\r\n    // Validate step number\r\n    index = parseInt(index.toString())\r\n    // Set current step\r\n    this.passedStepIndex = this.currentStepIndex\r\n    this.currentStepIndex = index\r\n\r\n    // Refresh elements\r\n    this.refreshUI()\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.stepper.changed')\r\n  }\r\n\r\n  private initHandlers = () => {\r\n    this.btnNext?.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n\r\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.next', e)\r\n    })\r\n\r\n    this.btnPrev?.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n\r\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.previous', e)\r\n    })\r\n\r\n    DOMEventHandlerUtil.on(this.element, '[data-kt-stepper-action=\"step\"]', 'click', (e: Event) => {\r\n      e.preventDefault()\r\n\r\n      if (this.steps && this.steps.length > 0) {\r\n        for (let i = 0; i < this.steps.length; i++) {\r\n          if ((this.steps[i] as HTMLElement) === this.element) {\r\n            let index = i + 1\r\n\r\n            const stepDirection = this._getStepDirection(index)\r\n            EventHandlerUtil.trigger(this.element, `stepper.${stepDirection}`, e)\r\n            return\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private _getStepDirection = (index: number) => {\r\n    return index > this.currentStepIndex ? 'next' : 'previous'\r\n  }\r\n\r\n  private getStepContent = (index: number) => {\r\n    const content = this.element.querySelectorAll('[data-kt-stepper-element=\"content\"]')\r\n    if (!content) {\r\n      return false\r\n    }\r\n\r\n    if (content[index - 1]) {\r\n      return content[index - 1]\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  private getLastStepIndex = () => {\r\n    return this.totatStepsNumber\r\n  }\r\n\r\n  private getTotalStepsNumber = () => {\r\n    return this.totatStepsNumber\r\n  }\r\n\r\n  private refreshUI = () => {\r\n    let state = ''\r\n\r\n    if (this.isLastStep()) {\r\n      state = 'last'\r\n    } else if (this.isFirstStep()) {\r\n      state = 'first'\r\n    } else {\r\n      state = 'between'\r\n    }\r\n\r\n    // Set state class\r\n    this.element.classList.remove('last')\r\n    this.element.classList.remove('first')\r\n    this.element.classList.remove('between')\r\n\r\n    this.element.classList.add(state)\r\n\r\n    // Step Items\r\n    const elements = this.element.querySelectorAll(\r\n      '[data-kt-stepper-element=\"nav\"], [data-kt-stepper-element=\"content\"], [data-kt-stepper-element=\"info\"]'\r\n    )\r\n\r\n    if (!elements || elements.length <= 0) {\r\n      return\r\n    }\r\n\r\n    for (var i = 0, len = elements.length; i < len; i++) {\r\n      var element = elements[i] as HTMLElement\r\n      var index = getElementIndex(element) + 1\r\n\r\n      element.classList.remove('current')\r\n      element.classList.remove('completed')\r\n      element.classList.remove('pending')\r\n\r\n      if (index === this.currentStepIndex) {\r\n        element.classList.add('current')\r\n\r\n        if (\r\n          this.options.animation !== false &&\r\n          element.getAttribute('data-kt-stepper-element') === 'content'\r\n        ) {\r\n          ElementStyleUtil.set(element, 'animationDuration', this.options.animationSpeed)\r\n\r\n          const animation =\r\n            this._getStepDirection(this.passedStepIndex) === 'previous'\r\n              ? this.options.animationPreviousClass\r\n              : this.options.animationNextClass\r\n          ElementAnimateUtil.animateClass(element, animation)\r\n        }\r\n      } else {\r\n        if (index < this.currentStepIndex) {\r\n          element.classList.add('completed')\r\n        } else {\r\n          element.classList.add('pending')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private isLastStep = () => {\r\n    return this.currentStepIndex === this.totatStepsNumber\r\n  }\r\n\r\n  private isFirstStep = () => {\r\n    return this.currentStepIndex === 1\r\n  }\r\n\r\n  private isBetweenStep = () => {\r\n    return this.isLastStep() === false && this.isFirstStep() === false\r\n  }\r\n\r\n  //   ///////////////////////\r\n  //   // ** Public API  ** //\r\n  //   ///////////////////////\r\n\r\n  //   // Plugin API\r\n  public goto = (index: number) => {\r\n    return this._goTo(index)\r\n  }\r\n\r\n  public goNext = () => {\r\n    return this.goto(this.getNextStepIndex())\r\n  }\r\n\r\n  public goPrev = () => {\r\n    return this.goto(this.getPrevStepIndex())\r\n  }\r\n\r\n  public goFirst = () => {\r\n    return this.goto(1)\r\n  }\r\n\r\n  public goLast = () => {\r\n    return this.goto(this.getLastStepIndex())\r\n  }\r\n\r\n  public getCurrentStepIndex = () => {\r\n    return this.currentStepIndex\r\n  }\r\n\r\n  public getNextStepIndex = () => {\r\n    if (this.totatStepsNumber >= this.currentStepIndex + 1) {\r\n      return this.currentStepIndex + 1\r\n    } else {\r\n      return this.totatStepsNumber\r\n    }\r\n  }\r\n\r\n  public getPassedStepIndex = () => {\r\n    return this.passedStepIndex\r\n  }\r\n\r\n  public getPrevStepIndex = () => {\r\n    if (this.currentStepIndex - 1 > 1) {\r\n      return this.currentStepIndex - 1\r\n    } else {\r\n      return 1\r\n    }\r\n  }\r\n\r\n  public getElement = (index: number) => {\r\n    return this.element\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler)\r\n  }\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler)\r\n  }\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name)\r\n  }\r\n\r\n  public destroy = () => {\r\n    console.log('destroy stepper')\r\n  }\r\n\r\n  public trigger = (name: string, event: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event)\r\n  }\r\n\r\n  // Static methods\r\n  public static hasInstace(element: HTMLElement): boolean {\r\n    return DataUtil.has(element, 'stepper')\r\n  }\r\n\r\n  public static getInstance(element: HTMLElement): StepperComponent | null {\r\n    if (element !== null && StepperComponent.hasInstace(element)) {\r\n      return DataUtil.get(element, 'stepper')\r\n    }\r\n    return null\r\n  }\r\n\r\n  // Create Instances\r\n  public static createInstances(selector: string): void {\r\n    const elements = document.body.querySelectorAll(selector)\r\n    elements.forEach((element) => {\r\n      const item = element as HTMLElement\r\n      let stepper = StepperComponent.getInstance(item)\r\n      if (!stepper) {\r\n        stepper = new StepperComponent(item, defaultStepperOptions)\r\n      }\r\n    })\r\n  }\r\n\r\n  public static createInsance = (\r\n    element: HTMLElement,\r\n    options: IStepperOptions = defaultStepperOptions\r\n  ): StepperComponent | null => {\r\n    if (!element) {\r\n      return null\r\n    }\r\n    let stepper = StepperComponent.getInstance(element)\r\n    if (!stepper) {\r\n      stepper = new StepperComponent(element, options)\r\n    }\r\n    return stepper\r\n  }\r\n\r\n  public static bootstrap(attr: string = '[data-kt-stepper]') {\r\n    StepperComponent.createInstances(attr)\r\n  }\r\n}\r\n\r\nexport {StepperComponent, defaultStepperOptions}\r\n"]},"metadata":{},"sourceType":"module"}