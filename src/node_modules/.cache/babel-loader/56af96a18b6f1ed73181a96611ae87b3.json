{"ast":null,"code":"var _jsxFileName = \"/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Redux\n// https://github.com/rt2zz/redux-persist\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport * as _redux from './setup';\nimport store, { persistor } from './setup/redux/Store'; // Axios\n\nimport axios from 'axios';\nimport { Chart, registerables } from 'chart.js'; // Apps\n\nimport { App } from './app/App';\nimport { MetronicI18nProvider } from './_metronic/i18n/Metronici18n';\n/**\r\n * TIP: Replace this style import with dark styles to enable dark mode\r\n *\r\n * import './_metronic/assets/sass/style.dark.scss'\r\n *\r\n * TIP: Replace this style import with rtl styles to enable rtl mode\r\n *\r\n * import './_metronic/assets/css/style.rtl.css'\r\n **/\n\nimport './_metronic/assets/sass/style.scss';\nimport './_metronic/assets/sass/style.react.scss';\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PUBLIC_URL\n} = process.env;\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\n\n/* const mock = */\n\n_redux.mockAxios(axios);\n/**\r\n * Inject Metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\n\n\n_redux.setupAxios(axios, store);\n\nChart.register(...registerables);\nReactDOM.render( /*#__PURE__*/_jsxDEV(MetronicI18nProvider, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      persistor: persistor,\n      loading: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 51\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(App, {\n        basename: PUBLIC_URL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/alireza/Desktop/Admin Panel/tosanex-admin-panel/src/src/index.tsx"],"names":["React","ReactDOM","PersistGate","Provider","_redux","store","persistor","axios","Chart","registerables","App","MetronicI18nProvider","PUBLIC_URL","process","env","mockAxios","setupAxios","register","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,qBAA/B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,aAAf,QAAmC,UAAnC,C,CAEA;;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,oCAAP;AACA,OAAO,0CAAP;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAeC,OAAO,CAACC,GAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAAmBV,MAAM,CAACW,SAAP,CAAiBR,KAAjB;AACnB;AACA;AACA;AACA;AACA;;;AACAH,MAAM,CAACY,UAAP,CAAkBT,KAAlB,EAAyBF,KAAzB;;AAEAG,KAAK,CAACS,QAAN,CAAe,GAAGR,aAAlB;AAEAR,QAAQ,CAACiB,MAAT,eACE,QAAC,oBAAD;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEb,KAAjB;AAAA,2BAEE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAxB;AAAmC,MAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5C;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAEM;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EASEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// Redux\r\n// https://github.com/rt2zz/redux-persist\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport {Provider} from 'react-redux'\r\nimport * as _redux from './setup'\r\nimport store, {persistor} from './setup/redux/Store'\r\n// Axios\r\nimport axios from 'axios'\r\nimport {Chart, registerables} from 'chart.js'\r\n\r\n// Apps\r\nimport {App} from './app/App'\r\nimport {MetronicI18nProvider} from './_metronic/i18n/Metronici18n'\r\n/**\r\n * TIP: Replace this style import with dark styles to enable dark mode\r\n *\r\n * import './_metronic/assets/sass/style.dark.scss'\r\n *\r\n * TIP: Replace this style import with rtl styles to enable rtl mode\r\n *\r\n * import './_metronic/assets/css/style.rtl.css'\r\n **/\r\nimport './_metronic/assets/sass/style.scss'\r\nimport './_metronic/assets/sass/style.react.scss'\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst {PUBLIC_URL} = process.env\r\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\r\n\r\n/* const mock = */ _redux.mockAxios(axios)\r\n/**\r\n * Inject Metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\r\n_redux.setupAxios(axios, store)\r\n\r\nChart.register(...registerables)\r\n\r\nReactDOM.render(\r\n  <MetronicI18nProvider>\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor} loading={<div>Loading...</div>}>\r\n        <App basename={PUBLIC_URL} />\r\n      </PersistGate>\r\n    </Provider>\r\n  </MetronicI18nProvider>,\r\n  document.getElementById('root')\r\n)\r\n"]},"metadata":{},"sourceType":"module"}